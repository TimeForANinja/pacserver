name: Go Build, Test, and Publish Release

permissions:
  contents: write

on:
  push:
    branches:
      - '**' # Triggers on pushes to every branch
  pull_request:

jobs:
  build:
    name: Test, Build, and Publish Release
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23 # Ensure you use the appropriate Go version

      # Step 3: Download Go dependencies
      - name: Download Dependencies
        run: go mod tidy


      # Step 4: Run tests
      - name: Run Tests
        run: |
          go test ./... -v

      # Step 5: Build Linux/AMD64 Binary
      - name: Build Linux/AMD64 Binary
        run: |
          mkdir -p build
          GOOS=linux GOARCH=amd64 CGO_LDFLAGS='-L/usr/lib/x86_64-linux-gnu -Bdynamic -lGL -static' go build -o build/pacserver-linux-amd64 ./cmd/pacserver.go

      # Step 6: Build Windows/AMD64 Binary
      - name: Build Windows/AMD64 Binary
        run: |
          mkdir -p build
          GOOS=windows GOARCH=amd64 go build -o build/pacserver-windows-amd64.exe ./cmd/pacserver.go

      # Step 7: Publish Release with Artifacts
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # Dynamically uses the branch name
          tag_name: ${{ github.ref_name }}
          files: |
            build/pacserver-linux-amd64
            build/pacserver-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
